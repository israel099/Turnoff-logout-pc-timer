import tkinter as tk
from datetime import datetime, timedelta
import subprocess
from tkinter import messagebox, simpledialog


class LogoutApp:
    def __init__(self, master):
        self.master = master
        master.title("Logout Timer")
        master.configure(bg='#ffcb05')  # set the background color of the window


        self.cancel_button = tk.Button(master, text="Cancel Shutdown", bg='#2F44D7', fg='#ffffff', font=('Arial', 14),
                                       command=self.cancel_shutdown)
        self.cancel_button.pack(side=tk.BOTTOM, padx=10, pady=10)

        # Create a list of all times in the day in 15-minute intervals
        times = []
        now = datetime.now()
        start_time = datetime(now.year, now.month, now.day, 0, 0, 0)
        end_time = start_time + timedelta(days=1)
        current_time = start_time
        while current_time < end_time:
            times.append(current_time.strftime("%H:%M %p"))
            current_time += timedelta(minutes=15)

        # Create a label and listbox for displaying the logout times
        self.label = tk.Label(master, text="Select logout time:", bg='#ffcb05', fg='#e60000', font=('Arial', 16))
        self.label.pack()

        self.listbox = tk.Listbox(master, height=10, yscrollcommand=True, bg='#fffcf5', fg='#e60000', font=('Arial', 14))
        self.listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

        # Insert the list of logout times into the listbox
        for time in times:
            self.listbox.insert(tk.END, time)

        # Create a button to initiate the logout process
        self.logout_button = tk.Button(master, text="Logout", bg='#e60000', fg='#ffffff', font=('Arial', 14), command=self.logout)
        self.logout_button.pack(side=tk.BOTTOM, padx=10, pady=10)

        # Create a label for the scrolling instructions
        self.scroll_label = tk.Label(master, text="Scroll down to see more options", bg='#ffcb05', fg='#e60000', font=('Arial', 12))
        self.scroll_label.pack(side=tk.RIGHT)

        # Try to retrieve the image from the URL


    def logout(self):
        selected_indices = self.listbox.curselection()
        if selected_indices:
            # At least one item is selected
            print("Selected item(s):")
            selected_time = self.listbox.get(self.listbox.curselection())
            now = datetime.now()
            logout_time = now.replace(hour=int(selected_time[:2]), minute=int(selected_time[3:]), second=0,
                                      microsecond=0)
            if logout_time < now:
                logout_time += timedelta(days=1)
            seconds = int((logout_time - now).total_seconds())

            # Cancel any previously scheduled shutdowns
            subprocess.call('shutdown /a', shell=True)

            # Start the shutdown timer in a background process
            cmd = f'shutdown /s /t {seconds}'
            subprocess.Popen(cmd, shell=True)

            selected_time_msg = f"You have selected {logout_time.strftime('%H:%M')} as the logout time."
            messagebox.showinfo("Logout Timer", selected_time_msg)
        else:
             # No item is selected
            print("Please select an item")
            messagebox.showerror("time is empty!", "please select time from list.")
    def cancel_shutdown(self):
        password = simpledialog.askstring("Password", "Enter the password to cancel shutdown:", show='*')
        if password == "adminpassword":
            subprocess.call('shutdown /a', shell=True)
            messagebox.showinfo("Logout Timer", "Shutdown canceled successfully.")
        else:
            messagebox.showerror("Logout Timer", "Incorrect password. Shutdown was not canceled.")


root = tk.Tk()
app = LogoutApp(root)
root.mainloop()
